@model Web.Areas.OutpostManagement.Models.District.FromRegionModel
@using Microsoft.Web.Mvc
@{
    ViewBag.Title = "Overview";
}
@section page_title{
Districts: Overview
}
@{
    Html.RenderPartial("_SubNavigation");
    Html.RenderPartial("_OutpostAdministrationSideBar");
}
<script type="text/javascript">
    Ext.onReady(function () {

        var administrationBtnId = window.res.header.navigation.administration;
        var administrationBtn = Ext.getCmp(administrationBtnId);
        administrationBtn.toggle(true);

        var outpostAdministrationBtnId = window.res.header.subnavigation.buttonTabs.outpost;
        var outpostAdministrationBtn = Ext.getCmp(outpostAdministrationBtnId);
        outpostAdministrationBtn.toggle(true);
        outpostAdministrationBtn.setIcon('@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/Administration/SubMenu/LocationSelected.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))');
        
        var districtSideBarBtnId = window.res.content.maincontent.sidebar.district;
        var districtBtn = Ext.getCmp(districtSideBarBtnId);

        districtBtn.toggle(true);

    });
</script>
<script type="text/javascript">
    Ext.onReady(function () {
        window.feature = {};
        window.feature.comboboxCountriesForModalId = 'countriesComboboxForModalId';
        window.feature.comboboxRegionsForModalId = 'regionsComboboxForModalId';
        window.feature.districtNameId = 'districtName';
        window.feature.districtNameEditModalId = 'districtNameModal';
        window.feature.comboboxRegionsId = 'regionsCombobox';
        window.feature.comboboxCountriesId = 'countriesCombobox';
        window.feature.clientId = 'clientIdForEditModal';
        window.feature.DistrictId ='districtId';
        
        window.feature.regionsStore = Ext.create('Ext.data.Store', {
            fields: ['Name', 'Id'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(OutpostManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "District", action = "GetRegions" })',
                reader: {
                    type: 'json',
                    root: 'regions',
                    disableCaching: true,
                    totalProperty: 'TotalItems'
                }

            }

        });

        window.feature.countriesStore = Ext.create('Ext.data.Store', {
            fields: ['Name', 'Id'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(OutpostManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "District", action = "GetCountries" })',
                reader: {
                    type: 'json',
                    root: 'countries',
                    disableCaching: true,
                    totalProperty: 'TotalItems'
                }
            }
        });
        window.feature.regionsStoreforModal = Ext.create('Ext.data.Store', {
            fields: ['Name', 'Id'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(OutpostManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "District", action = "GetRegions" })',
                reader: {
                    type: 'json',
                    root: 'regions',
                    disableCaching: true,
                    totalProperty: 'TotalItems'
                }

            }

        });
        window.feature.countriesStoreforModal = Ext.create('Ext.data.Store', {
            fields: ['Name', 'Id'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(OutpostManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "District", action = "GetCountries" })',
                reader: {
                    type: 'json',
                    root: 'countries',
                    disableCaching: true,
                    totalProperty: 'TotalItems'
                }
            }
        });

        window.feature.modal = Ext.define('Ext.feature.district.Modal', {
            extend: 'Ext.window.Window',
            title: 'Add new District',
            height: 200,
            width: 390,
            modal: true,
            ui: 'snapshot-popup-window',
            fieldDefaults: {
            msgTarget: 'under'
            },
            layout: {
                align: 'stretch',
                padding: 10,
                type: 'vbox'
            },
            initComponent: function () {
                var me = this;

                Ext.applyIf(me, {
                    items: [{ xtype: 'combobox',
                        fieldLabel: 'Country',
                        store: window.feature.countriesStoreforModal,
                        queryMode: 'local',
                        displayField: 'Name',
                        valueField: 'Id',
                        id: window.feature.comboboxCountriesForModalId,
                        emptyText: 'Select a country',
                        allowBlank: false,
                        editable: false,
                        listeners:
                                   { select: function (combo, record, index) {
                                       var selectedCountryId = record[0].data.Id;
                                       Ext.getCmp(window.feature.comboboxRegionsForModalId).setValue(null);
                                       window.feature.regionsStoreforModal.load({
                                           params: { countryId: selectedCountryId }
                                       });
                                   }
                                   }
                    },
                                 { xtype: 'combobox',
                                     fieldLabel: 'Region',
                                     store: window.feature.regionsStore,
                                     queryMode: 'local',
                                     displayField: 'Name',
                                     valueField: 'Id',
                                     id: window.feature.comboboxRegionsForModalId,
                                     emptyText: _t('Select a region'),
                                     allowBlank: false,
                                     editable: false,
                                     store: window.feature.regionsStoreforModal
                                 },
                                            {
                                                xtype: 'textfield',
                                                name: 'Name',
                                                fieldLabel: 'District Name',
                                                allowBlank:false,
                                                itemId: window.feature.districtNameId,
                                                anchor: '100%'
                                            }]
                });
                me.listeners = {
                    afterrender: function () {
                        window.feature.countriesStoreforModal.load();

                        var selectedCountryValue = window.feature.comboBoxCountries.getValue();
                        var selectedRegionValue = window.feature.comboBoxRegions.getValue();
                        var comboboxRegionForModal = Ext.getCmp(window.feature.comboboxRegionsForModalId);
                        var comboboxCountriesForModal = Ext.getCmp(window.feature.comboboxCountriesForModalId);

                        if ((selectedCountryValue !== null) && (selectedRegionValue !== null)) {
                            comboboxCountriesForModal.value = selectedCountryValue;
                            window.feature.regionsStoreforModal.load({
                                params: { countryId: selectedCountryValue }
                            });
                            comboboxRegionForModal.value = selectedRegionValue;
                        }
                        else {
                            if (selectedCountryValue !== null) {
                                comboboxCountriesForModal.value = selectedCountryValue;
                                window.feature.regionsStoreforModal.load({
                                    params: { countryId: selectedCountryValue }
                                });
                            }
                        }

                    }

                };

                me.buttons = [{ text: 'Cancel',
                             margin: '10 10 20 0',
                             ui: 'snapshot-cancel-btn',
                             cls: 'x-add-button-gradient',
                             handler: function () { me.close(); me.destroy(); }
                }, {
                    text: 'Save',
                    margin: '0 20 20 10',
                    ui: 'snapshot-add-btn',
                    cls: 'x-add-button-gradient',
                    handler: function () {
                        var region =Ext.getCmp(window.feature.comboboxRegionsForModalId);
                        var districtName = me.down('#' + window.feature.districtNameId);

                        var ok = IsValid(region, districtName);
                        if(ok==true){
                        var values = {
                            'districtInputModel.Name': districtName.getValue(),
                            'districtInputModel.Region.Id': region.getValue()
                        };
                        var postToUrl = '@Url.RouteUrl(OutpostManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "District", action = "Create" })';
                        var action = $.post(postToUrl, values);
                        action.success(function (result) {

                        if(result.CloseModal === false){
                                            var msgAlert = Ext.Msg;
                                            msgAlert.ui = 'snapshot-popup-window';
                                            msgAlert.msgButtons['ok'].ui = 'snapshot-add-btn';
                                            msgAlert.msgButtons['ok'].margin = '10 10 20 0';
                                            msgAlert.alert(result.Status, result.Message);
                        }
                        else{
                            var selectedCountryInModal = Ext.getCmp(window.feature.comboboxCountriesForModalId).getValue();
                            var selectedRegionInModal = Ext.getCmp(window.feature.comboboxRegionsForModalId).getValue();
                            me.close();
                            me.destroy();

                            window.feature.regionsStore.load({
                                params: { countryId: selectedCountryInModal }
                            });
                            var combobox = Ext.getCmp(window.feature.comboboxCountriesId);
                            combobox.setValue(selectedCountryInModal);
                            Ext.getCmp(window.feature.comboboxRegionsId).value = selectedRegionInModal;

                            window.feature.store.loadPage(1, {
                                params: { RegionId: selectedRegionInModal }
                            });
                            }
                        });
                    }}
                }]
                me.callParent(arguments);
            }
        });


        window.feature.modalEdit = Ext.define('Ext.feature.district.ModalEdit', {
            extend: 'Ext.window.Window',
            title: 'Edit District',
            height: 200,
            width: 390,
            modal: true,
            ui: 'snapshot-popup-window',
            layout: {
                align: 'stretch',
                padding: 10,
                type: 'vbox'
            },
            initComponent: function () {
                var me = this;

                Ext.applyIf(me, {
                    items: [{ xtype: 'combobox',
                        fieldLabel: 'Country',
                        store: window.feature.countriesStoreforModal,
                        queryMode: 'local',
                        displayField: 'Name',
                        valueField: 'Id',
                        id: window.feature.comboboxCountriesForModalId,
                        emptyText: _t('Select a country'),
                        listeners:
                                   { select: function (combo, record, index) {
                                       var selectedCountryId = record[0].data.Id;
                                       Ext.getCmp(window.feature.comboboxRegionsForModalId).setValue(null);
                                       window.feature.regionsStoreforModal.load({
                                           params: { countryId: selectedCountryId }
                                       });
                                   }
                                   }
                    }, { xtype: 'combobox',
                        fieldLabel: 'Region',
                        store: window.feature.regionsStore,
                        queryMode: 'local',
                        displayField: 'Name',
                        valueField: 'Id',
                        id: window.feature.comboboxRegionsForModalId,
                        emptyText: _t('Select a region'),
                        allowBlank: false,
                        editable: false,
                        store: window.feature.regionsStoreforModal
                    }, { xtype: 'textfield',
                        name: 'Name',
                        fieldLabel: _t('District Name'),
                        id: window.feature.districtNameEditModalId,
                        allowBlank: false,
                        editable: false,
                        anchor: '100%'
                    }, { xtype: 'textfield',
                        hidden: true,
                        name: 'ClientId',
                        id: window.feature.clientId

                    },{ xtype: 'textfield',
                        hidden: true,
                        name: 'Id',
                        id: window.feature.DistrictId

                    }]
                });
                me.listeners = {
                    afterrender: function () {
                        window.feature.countriesStoreforModal.load();

                        var selectedCountryValue = window.feature.comboBoxCountries.getValue();
                        var selectedRegionValue = window.feature.comboBoxRegions.getValue();
                        var comboboxRegionForModal = Ext.getCmp(window.feature.comboboxRegionsForModalId);
                        var comboboxCountriesForModal = Ext.getCmp(window.feature.comboboxCountriesForModalId);

                        if ((selectedCountryValue !== null) && (selectedRegionValue !== null)) {
                            comboboxCountriesForModal.value = selectedCountryValue;
                            window.feature.regionsStoreforModal.load({
                                params: { countryId: selectedCountryValue }
                            });
                            comboboxRegionForModal.value = selectedRegionValue;
                        }
                        else {
                            if (selectedCountryValue !== null) {
                                comboboxCountriesForModal.value = selectedCountryValue;
                                window.feature.regionsStoreforModal.load({
                                    params: { countryId: selectedCountryValue }
                                });
                            }
                        }

                    }

                };

                me.buttons = [{ text: 'Cancel',
                    margin: '10 10 20 0',
                    ui: 'snapshot-cancel-btn',
                    cls: 'x-add-button-gradient',
                    handler: function () { me.close(); me.destroy(); }
                }, {
                    text: 'Save',
                    margin: '0 20 20 10',
                    ui: 'snapshot-add-btn',
                    cls: 'x-add-button-gradient', 
                    handler: function () {
                    var districtName = me.down('#' + window.feature.districtNameEditModalId);
                    var region = Ext.getCmp(window.feature.comboboxRegionsForModalId);
                    
                    var ok = IsValid(region, districtName);
                    if(ok ==true){
                        var values = {
                            'districtInputModel.Name': districtName.getValue(),
                            'districtInputModel.Region.Id': region.getValue(),
                            'districtInputModel.Client.Id': Ext.getCmp(window.feature.clientId).getValue(),
                            'districtInputModel.Id': Ext.getCmp(window.feature.DistrictId).getValue()
                        };
                        var postToUrl = '@Url.RouteUrl(OutpostManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "District", action = "Edit" })';
                        var action = $.post(postToUrl, values);
                        action.success(function (result) {
                             if(result.CloseModal === false){
                                var msgAlert = Ext.Msg;
                                            msgAlert.ui = 'snapshot-popup-window';
                                            msgAlert.msgButtons['ok'].ui = 'snapshot-add-btn';
                                            msgAlert.msgButtons['ok'].margin = '10 10 20 0';
                                            msgAlert.alert(result.Status, result.Message);
                            }
                            else{
                            var selectedCountryInModal = Ext.getCmp(window.feature.comboboxCountriesForModalId).getValue();
                            var selectedRegionInModal = Ext.getCmp(window.feature.comboboxRegionsForModalId).getValue();
                            me.close();
                            me.destroy();

                            window.feature.regionsStore.load({
                                params: { countryId: selectedCountryInModal }
                            });
                            var combobox = Ext.getCmp(window.feature.comboboxCountriesId);
                            combobox.setValue(selectedCountryInModal);
                            Ext.getCmp(window.feature.comboboxRegionsId).value = selectedRegionInModal;

                            window.feature.store.loadPage(1, {
                                params: { RegionId: selectedRegionInModal }
                            });
                            }
                        });
                      }
                    }
                }]
                me.callParent(arguments);
            }
            
        });

            function IsValid(region, districtName){
            var ok = true;
            if (region.getValue() == null){
                region.markInvalid('Field Region is required!');  
                region.setValue(null);
                ok = false;
            }

           if (districtName.getValue() == null || $.trim(districtName.getValue()) == ''){
                districtName.markInvalid('Field Name is required!');  
                districtName.setValue(null);
                ok = false;
            }
            return ok;
        }

    });

</script>

<script type="text/javascript">

    Ext.onReady(function () {
        window.feature.searchTextFieldId = 'searchTextField';
        var timeout;

        window.feature.comboBoxCountries = Ext.create('Ext.form.ComboBox', {
            store: window.feature.countriesStore,
            queryMode: 'local',
            id: window.feature.comboboxCountriesId,
            displayField: 'Name',
            labelAlign: 'top',
            labelClsExtra: 'combo-label',
            fieldLabel: 'Selected Country',
            valueField: 'Id',
            margin: '0 0 0 30',
            emptyText: _t('Selected country'),
            listeners: {
                select: function (combo, record, index) {
                    var selectedCountryId = record[0].data.Id;
                    window.feature.comboBoxRegions.setValue(null);
                    window.feature.store.proxy.extraParams.countryId = selectedCountryId;
                    window.feature.store.loadPage(1);
                    window.feature.regionsStore.load({
                        params: { countryId: selectedCountryId }
                    });

                }
            }
        });

        window.feature.comboBoxRegions = Ext.create('Ext.form.ComboBox', {
            store: window.feature.regionsStore,
            queryMode: 'local',
            displayField: 'Name',
            valueField: 'Id',
            labelAlign: 'top',
            labelClsExtra: 'combo-label',
            fieldLabel: 'Selected Region',
            id: window.feature.comboboxRegionsId,
            margin: '0 0 0 20',
            emptyText: _t('Selected region'),
            listeners: {
                select: function (combo, record, index) {
                    var selectedRegionId = record[0].data.Id;
                    window.feature.store.proxy.extraParams.countryId = '';
                    window.feature.store.proxy.extraParams.regionId = selectedRegionId;
                    window.feature.store.loadPage(1, { params: { regionId: selectedRegionId} });
                }
            }
        });
        function GetSelectedCountryId() {
            return Ext.getCmp(window.feature.comboboxCountriesId).getValue();
        }
        function GetSelectedRegionId() {
            return Ext.getCmp(window.feature.comboboxRegionsId).getValue()
        }
        window.feature.store = Ext.create('Ext.data.Store', {
            pageSize: 50,
            remoteSort: true,
            fields: ['Name', 'OutpostNo', 'Id', 'ClientId', 'RegionId', 'CountryId'],
            proxy: {
                type: 'ajax',
                url: '@Url.RouteUrl(OutpostManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "District", action = "Index" })',
                extraParams: { regionId: '', countryId: '', searchName: '' },
                reader: { type: 'json',
                    root: 'districts',
                    totalProperty: 'TotalItems'
                },
                simpleSortMode: true

            },
            sorters: [{
                property: 'Name',
                direction: 'DESC'
            }]
        });

        Ext.QuickTips.init();

        function addTooltip(val, meta, rec, rowIdx, colIdx, ds){
            meta.tdAttr = 'data-qtip="' + "Click on district name in order to manage its outposts" +'"' ;
            return '<u>' + val + '</u>';
        };  

        window.feature.grid = Ext.create('Ext.grid.Panel', {
            flex: 3,
            store: window.feature.store,
            disableSelection: true,
            cls: 'white-border',
            loadMask: true,
            columns: [{
                text: "Name",
                dataIndex: 'Name',
                anchor: '90%',
                sortable: true,
                menuDisabled:true,
                flex: 1,
                processEvent: function (type, view, cell, recordIndex, cellIndex, e) {
					if (type == 'click'){
                        var rec = view.panel.store.getAt(recordIndex);
	                    var link = '@Url.RouteUrl(OutpostManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "Outpost", action = "FromDistricts" })';
                        link = link + "/?districtId=" + rec.get('Id');
                        navigateTo(link);
						return false;
					}
					return true;
				},
                renderer: addTooltip
            }, {
                text: "No of outposts",
                dataIndex: 'OutpostNo',
                align:'center',
                menuDisabled:true,
                sortable: true,
                flex: 1
            }, {
                xtype: 'actioncolumn',
                text: 'Actions',
                menuDisabled:true,
                flex: 0.7,
                items: [{
                    icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/edit.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                    tooltip: _t('Edit this district'),
                    handler: function (grid, rowIndex, colIndex) {
                     if(@(ViewBag.HasNoRightsToAdd) === true){
                                           var msgAlert = Ext.Msg;
                                            msgAlert.ui = 'snapshot-popup-window';
                                            msgAlert.msgButtons['ok'].ui = 'snapshot-add-btn';
                                            msgAlert.msgButtons['ok'].margin = '10 10 20 0';
                                            msgAlert.alert("Alert","You have no rights for this action!");
                            }else{
                        var record = grid.store.getAt(rowIndex);
                        
                        window.feature.countriesStore.load();
                        window.feature.comboBoxCountries.setValue(record.get('CountryId'));
                        window.feature.regionsStore.load({
                            params: { countryId: record.get('CountryId') }
                        });
                        window.feature.comboBoxRegions.setValue(record.get('RegionId'));

                        var modalForEdit = new window.feature.modalEdit();
                        Ext.getCmp(window.feature.districtNameEditModalId).setValue(record.data.Name);
                        Ext.getCmp(window.feature.clientId).setValue(record.data.ClientId);
                        Ext.getCmp(window.feature.DistrictId).setValue(record.data.Id);
                        modalForEdit.show();

                    }}
                },{
                    icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/delete.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                    tooltip: _t('Remove this district'),
                    handler: function (grid, rowIndex, colIndex) {
                     if(@(ViewBag.HasNoRightsToDelete) === true){
                                           var msgAlert = Ext.Msg;
                                            msgAlert.ui = 'snapshot-popup-window';
                                            msgAlert.msgButtons['ok'].ui = 'snapshot-add-btn';
                                            msgAlert.msgButtons['ok'].margin = '10 10 20 0';
                                            msgAlert.alert("Alert","You have no rights for this action!");
                            }else{
                        var record = grid.store.getAt(rowIndex);

                        var msgConfirm = Ext.Msg;
                            msgConfirm.ui = 'snapshot-popup-window';
                            msgConfirm.msgButtons['no'].ui = 'snapshot-cancel-btn';
                            msgConfirm.msgButtons['no'].margin = '10 10 20 0';
                            msgConfirm.msgButtons['yes'].ui = 'snapshot-add-btn';
                            msgConfirm.msgButtons['ok'].ui = 'snapshot-add-btn';
                            msgConfirm.msgButtons['ok'].margin = '10 10 20 0';
                        msgConfirm.confirm('Confirm', 'Are you sure you want to delete the district?', function (button) {

                            var values = { guid: record.data.Id
                            };
                            if (button === 'yes') {

                                var postToUrl = '@Url.RouteUrl(OutpostManagementAreaRegistration.DEFAULT_ROUTE, new { controller = "District", action = "Delete" })';
                                var action = $.post(postToUrl, values);
                                action.success(function (result) {
                                    if (result.Status !== 'Success') {
                                        var msgAlert = Ext.Msg;
                                            msgAlert.ui = 'snapshot-popup-window';
                                            msgAlert.alert(result.Status, result.Message);
                                    }
                                    var selectedCountryId = Ext.getCmp(window.feature.comboboxCountriesId).getValue();
                                    var selectedRegionId = Ext.getCmp(window.feature.comboboxRegionsId).getValue();

                                    if (selectedRegionId) {
                                        GetStoreWithDistrictsSpecificToRegionWith(selectedRegionId);
                                    } else {
                                        if (selectedCountryId)
                                        { GetStoreWithDistrictsSpecificToCountryWith(selectedCountryId); }
                                        else {
                                            window.feature.store.loadPage(1);
                                        }
                                    }

                                });

                            }

                        });

                        }
                    }
                }

            ]
            }],
            bbar: Ext.create('Ext.PagingToolbar', {
                store: window.feature.store,
                displayInfo: true,
                displayMsg: 'Displaying topics {0} - {1} of {2}',
                emptyMsg: "No topics to display",
                ui: 'snapshot-pagination-toolbar'
            })
        });
        function GetStoreWithDistrictsByNameSpecificToRegionWith(SelectedRegionId, SearchByName) {
            window.feature.store.loadPage(1, { params: { RegionId: SelectedRegionId, SearchName: SearchByName} });
        }
        function GetStoreWithDistrictsSpecificToRegionWith(SelectedRegionId) {
            window.feature.store.loadPage(1, { params: { RegionId: SelectedRegionId} });
        }
        function GetStoreWithDistrictsByNameSpecificToCountryWith(SelectedCountryId, SearchByName) {
            window.feature.store.loadPage(1, { params: { CountryId: SelectedCountryId, SearchName: SearchByName} });
        }
        function GetStoreWithDistrictsSpecificToCountryWith(SelectedCountryId) {
            window.feature.store.loadPage(1, { params: { CountryId: SelectedCountryId} });
        }
        function GetStoreWithDistrictsByName(SearchByName) {
            window.feature.store.loadPage(1, { params: { SearchName: SearchByName} });
        }
        var contentRes = window.res.content;
        var mainContent = Ext.getCmp(contentRes.maincontent.id);
        mainContent.add({
            xtype: 'container',
            margin:'45 50 20 20',
            padding:'20 20 0 20',
			id:'TopContainer',
			layout: {
				align: 'stretch',
				type: 'vbox'
			},
			items: [
				{
					xtype: 'container',
					layout: {
						align: 'stretch',
						type: 'vbox'
					},
					height: 130,
					items: [{
							xtype: 'container',
							flex: 1,
                            layout: {
                                type: 'hbox'
                            },
                            items: [{
                                xtype: 'container',
                                flex: 2,
							    layout: {
								    type: 'column'
							    },
							    items: [{
									xtype: 'container',
									height: 30,
									width: 30,
									html:'&nbsp;'
								},{xtype: 'image',
                                src: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/Administration/Content/pinIcon.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                                margin: '0 10 10 10'
                                },{
									xtype: 'label',
                                    cls: 'x-title-label',
									text: 'District Administration'
								},{
									xtype: 'button',
                                    ui: 'snapshot-add-btn',
                                    cls: 'x-add-button-gradient',
                                    margin: '0 0 0 20',
                                    disabled: @(ViewBag.HasNoRightsToAdd),
                                    text: 'Add New District',
                                    handler: function () {
                                        var districtModal = new window.feature.modal();
                                        districtModal.show();
                                    }
								}]
                            },{
                                xtype: 'container',
                                flex: 1,
							    layout: {
								    type: 'hbox',
                                    pack:'end'
							    },
                                items: [{
                                    xtype: 'textfield',
                                    id: window.feature.searchTextFieldId,
                                    width: 200,
                                    frame: true,
                                    emptyText: 'Search District',
                                    enableKeyEvents: true,
                                    listeners: {
                                        specialkey: function (field, e) {
                                            if (e.getKey() == Ext.EventObject.ESC) {
                                                var selectedCountryId = Ext.getCmp(window.feature.comboboxCountriesId).getValue();
                                                var selectedRegionId = Ext.getCmp(window.feature.comboboxRegionsId).getValue();
                                                var searchByName = Ext.getCmp(window.feature.searchTextFieldId).getValue();
                                                window.feature.store.proxy.extraParams.searchName = '';

                                                Ext.getCmp(window.feature.searchTextFieldId).setValue('');
                                                if (selectedRegionId) {
                                                    GetStoreWithDistrictsSpecificToRegionWith(selectedRegionId)
                                                } else {
                                                    if (selectedCountryId) {
                                                        GetStoreWithDistrictsSpecificToCountryWith(selectedCountryId)
                                                    } else {
                                                        window.feature.store.loadPage(1);
                                                    }
                                                }
                                            }
                                        },
                                        keyup: function () {

                                            var selectedCountryId = Ext.getCmp(window.feature.comboboxCountriesId).getValue();
                                            var selectedRegionId = Ext.getCmp(window.feature.comboboxRegionsId).getValue();
                                            var searchByName = Ext.getCmp(window.feature.searchTextFieldId).getValue();

                                            window.feature.store.proxy.extraParams.searchName = searchByName;

                                            clearTimeout(timeout);
                                            timeout = setTimeout(function () {

                                                if (selectedRegionId) {
                                                    GetStoreWithDistrictsByNameSpecificToRegionWith(selectedRegionId, searchByName);
                                                } else {
                                                    if (selectedCountryId) {
                                                        GetStoreWithDistrictsByNameSpecificToCountryWith(selectedCountryId, searchByName);
                                                    }
                                                    else {
                                                        GetStoreWithDistrictsByName(searchByName);
                                                    }
                                                }
                                            }, 1000);


                                        }
                                    }            
                                }]
                            }]
						},{
							xtype: 'container',
                            margin: '0 0 0 30',
							flex: 1,
							layout: {
								type: 'column'
							},
							items: [
								window.feature.comboBoxCountries,
                                window.feature.comboBoxRegions
							]
						}
					]
				},
					window.feature.grid
			]
        });

        window.feature.countriesStore.load();

        if ('@Model.CountryId' != '@Guid.Empty' && '@Model.RegionId' != '@Guid.Empty')
        {

            window.feature.regionsStore.load({
                params: { countryId: '@Model.CountryId' }
            });

            window.feature.comboBoxCountries.setValue('@Model.CountryId');
            window.feature.comboBoxRegions.setValue('@Model.RegionId');

            window.feature.store.proxy.extraParams.countryId = '@Model.CountryId';
            window.feature.store.proxy.extraParams.regionId = '@Model.RegionId';
        }

        window.feature.store.loadPage(1);

    });
</script>
