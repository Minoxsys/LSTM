@using Web.Areas.LocationManagement;
@using Web.Areas.ConditionManagement;
@using Web.Areas.MessagesManagement;
@using Web.Areas.MessagesManagement.Controllers;
@using Web.Areas.ConditionManagement.Controllers;
@using Web.Areas.LocationManagement.Controllers;
@using Web.Areas.AnalysisManagement.Controllers;
@using Web.Areas.AnalysisManagement;
@using Web.Bootstrap.Routes;

<!DOCTYPE html>
    <html>
<head>
    <meta charset="utf-8" />
    <title>@RenderSection("page_title", required: true)</title>
    <link href="@(Url.RouteUrl<CssController>(req => req.Index("theme"), ScriptsRoutesRegistrar.CSS))"
        rel="stylesheet" type="text/css" media="screen,projection" />
    <link href="@(Url.RouteUrl<CssController>(req => req.Index("button"), ScriptsRoutesRegistrar.CSS))"
        rel="stylesheet" type="text/css" media="screen,projection" />
    <link href="@(Url.RouteUrl<CssController>(req => req.Index("toolbar"), ScriptsRoutesRegistrar.CSS))"
        rel="stylesheet" type="text/css" media="screen,projection" />
    <link href="@(Url.RouteUrl<CssController>(req => req.Index("window"), ScriptsRoutesRegistrar.CSS))"
        rel="stylesheet" type="text/css" media="screen,projection" />
    <link href="@(Url.RouteUrl<CssController>(req => req.Index("wrap-headers"), ScriptsRoutesRegistrar.CSS))"
        rel="stylesheet" type="text/css" media="screen,projection" />
    <!--[if IE]>
    <link href="@(Url.RouteUrl<CssController>(req => req.Index("ie"), ScriptsRoutesRegistrar.CSS))"
        rel="stylesheet" type="text/css" media="screen, projection" />
    <![endif]-->
    <script src="@(Url.RouteUrl<JavascriptController>(req => req.Index("frameworks"), ScriptsRoutesRegistrar.JAVASCRIPT))"
        language="javascript" type="text/javascript"> </script>
</head>
<body>
 <script type="text/javascript">
    function navigateTo(endpoint){
        var loc = window.location;

        window.location.href = loc.protocol + '//' +  loc.host + endpoint;
    }
    function _t(text){
        return text;
    }
    window.res = {
        viewport: 'SnapshotViewport',
        link:{
            dashboard:'@Url.RouteUrl(Web.Bootstrap.Routes.DefaultRouteRegistrar.DEFAULT_ROUTE, new { controller = "Home", action = "Index" })',
            administration:'@(Url.RouteUrl<CountryController>( x=>x.Overview() ,  LocationManagementAreaRegistration.DEFAULT_ROUTE ))',
            regionOverview:'@(Url.RouteUrl<RegionController>( x => x.Overview() ,  LocationManagementAreaRegistration.DEFAULT_ROUTE ))',
            district: '@(Url.RouteUrl<DistrictController>( x=>x.Overview() ,  LocationManagementAreaRegistration.DEFAULT_ROUTE ))',
            usersOverview: '@(Url.RouteUrl<UserManagerController>( x=>x.Overview() ,  Web.Bootstrap.Routes.DefaultRouteRegistrar.DEFAULT_ROUTE ))',
            clientsOverview: '@(Url.RouteUrl<ClientManagerController>( x=>x.Overview() ,  Web.Bootstrap.Routes.DefaultRouteRegistrar.DEFAULT_ROUTE ))',
            rolesOverview: '@(Url.RouteUrl<RoleManagerController>( x=>x.Overview() ,  Web.Bootstrap.Routes.DefaultRouteRegistrar.DEFAULT_ROUTE ))',
            analysisAndReports: '@(Url.RouteUrl<AnalysisController>(x=>x.Overview(),AnalysisManagementAreaRegistration.DEFAULT_ROUTE))',
            condition: '@(Url.RouteUrl<ConditionController>(x=>x.Overview(), ConditionManagementAreaRegistration.DEFAULT_ROUTE))',
            appointment: '@(Url.RouteUrl<AppointmentController>(x=>x.Overview(), ConditionManagementAreaRegistration.DEFAULT_ROUTE))',
            diagnosis: '@(Url.RouteUrl<DiagnosisController>(x=>x.Overview(), ConditionManagementAreaRegistration.DEFAULT_ROUTE))',
            treatment: '@(Url.RouteUrl<TreatmentController>(x=>x.Overview(), ConditionManagementAreaRegistration.DEFAULT_ROUTE))',
            advice: '@(Url.RouteUrl<AdviceController>(x=>x.Overview(), ConditionManagementAreaRegistration.DEFAULT_ROUTE))',
            drugshop: '@(Url.RouteUrl<DrugShopController>(x=>x.Overview(), MessagesManagementAreaRegistration.DEFAULT_ROUTE))',
            dispensary: '@(Url.RouteUrl<DispensaryController>(x=>x.Overview(), MessagesManagementAreaRegistration.DEFAULT_ROUTE))',
            healthcenter: '@(Url.RouteUrl<HealthCenterController>(x=>x.Overview(), MessagesManagementAreaRegistration.DEFAULT_ROUTE))',
            sentMessage: '@(Url.RouteUrl<SentMessagesController>(x=>x.Overview(), MessagesManagementAreaRegistration.DEFAULT_ROUTE))'
        },
        header:{
            id:'Header',
            navigation:{
                id:'Navigation',
                toggleGroup: 'navigation-toggle-group',
                logo: 'Logo',
                dashboard:'Dashboard',
                administration: 'Administration',
                drugshop: 'Messages',
                analysisAndReports:'AnalysisAndReports'

            },
            subnavigation:{
                id:'SubNavigation'
            }
        },
        content:{
            id:'Content'
        }
    }
   
    Ext.onReady(function(){
        var viewport = Ext.create('Ext.container.Viewport', {
            id: res.viewport,
            renderTo:Ext.getBody(),
                margin: '0 auto',
                padding: '0',
            layout: {
                align: 'stretch',
                type: 'vbox'
            },
            items: [{
                xtype: 'container',
                scollable: true,
                height: 110,
                id: res.header.id,
                itemId: '',
                layout: {
                    align: 'stretch',
                    type: 'vbox'
                },
                items: [{
                    xtype: 'container',
                    height: 70,
                    id: res.header.navigation.id,
                    cls: 'x-add-navigation-gradient',
                    layout: {
                        align: 'stretch',
                        type: 'hbox'
                    },
                    items: [{
                        xtype: 'container',
                        width: 820,
                        layout: 'column',
                        items: [{
                            xtype: 'container',
                            height: 70,
                            margin: '15 20 0 20',
                            id: res.header.navigation.logo,
                            padding: 0,
                            width: 195,
                            items: [{ xtype: 'image',
                                src: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/logo_inthec.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))'
                            }]
                        },{
                            xtype: 'button',
                            id: res.header.navigation.dashboard,
                            height: 70,
                            padding: '0 0 0 0',
                            width: 135,
                            icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/Menu/Dashboard.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                            iconAlign: 'left',
                            ui: 'snapshot-navigation-btn',
                            toggleGroup: res.header.navigation.toggleGroup,
                            enableToggle: true,
                            pressed: true,
                            text: '&nbsp;&nbsp;&nbsp;&nbsp;Dashboard',
                            handler: function () {
                                navigateTo(res.link.dashboard);
                            }
                        },{
                            xtype: 'button',
                            id: res.header.navigation.administration,
                            height: 70,
                            padding: '0 0 0 5',
                            width: 170,
                            icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/Menu/Administration.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                            iconAlign: 'left',
                            ui: 'snapshot-navigation-btn',
                            toggleGroup: res.header.navigation.toggleGroup,
                            handler: function () {
                                navigateTo(res.link.administration);
                            },
                            enableToggle: true,
                            text: '&nbsp;&nbsp;&nbsp;&nbsp;Administration'
                        },{
                            xtype: 'button',
                            id: res.header.navigation.drugshop,
                            height: 70,
                            padding: '0 0 0 5',
                            width: 140,
                            icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/Menu/OutpostProductLevel.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                            iconAlign: 'left',
                            ui: 'snapshot-navigation-btn',
                            toggleGroup: res.header.navigation.toggleGroup,
                            handler: function () {
                                navigateTo(res.link.drugshop);
                            },
                            enableToggle: true,
                            text: '&nbsp;&nbsp;&nbsp;&nbsp;Messages'
                        },{
                            xtype: 'button',
                            id: res.header.navigation.analysisAndReports,
                            height: 70,
                            padding: '0 0 0 5',
                            width: 120,
                            icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/Menu/Analysis.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                            iconAlign: 'left',
                            ui: 'snapshot-navigation-btn',
                            toggleGroup: res.header.navigation.toggleGroup,
                            enableToggle: true,
                            text: '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Analysis',
                            handler: function () {
                                navigateTo(res.link.analysisAndReports);
                            }
                        }] 
                    }, {
                        xtype: 'container',
                        id: 'userInfo',
                        flex: 1,
                        minWidth: 300,
                        layout: {
                            align: 'stretch',
                            type: 'vbox',
                            pack: 'end'
                        },
                        items: [{
                            xtype: 'container',
                            flex: 1,
                            layout: {
                                align: 'stretch',
                                pack: 'end',
                                type: 'hbox'
                            },
                            items: [{
                                xtype: 'container',
                                width: 380,
                                layout: {
                                    align: 'stretch',
                                    type: 'vbox'
                                },
                                items: [{
                                    xtype: 'label',
                                    style: 'text-align:right; color: white;',
                                    margin: '13, 20, 7, 0',
                                    text: '@Html.Action("UserDetails", new { area=string.Empty,controller="Home" })',
                                    cls: 'x-username-label'
                                }, {
                                    xtype: 'container',
                                    style: 'text-align:right;',
                                    items: [{
                                        xtype: 'label',
                                        margin: '0, 20, 0, 0',
                                        cls: 'x-userMenu-label',
                                        style: 'color: white;',
                                        text: 'Help',
                                        autoEl: { tag: 'a', href: '' },
                                        listeners: {
                                            render: function (c) {
                                                c.getEl().on('click', function () {
                                                    alert("Support and help for all web users where any functionality related to the system and solution is unavailable shall be processed by email request. \nSupport is available from 08:00-18:00 GMT, (Monday to Friday except public holidays).\n\nPlease contact us at support@minoxsys.com\nAcknowledgement shall be received within one (1) business hour from receipt of report and resolution target is five (5) days for 95% of incidents.");
                                                });

                                            }
                                        }
                                    }, {
                                        xtype: 'label',
                                        margin: '0, 20, 0, 0',
                                        cls: 'x-userMenu-label',
                                        style: 'color: white;',
                                        text: ' · Account Options ·',
                                        autoEl: { tag: 'a', href: '@Url.RouteUrl(Web.Bootstrap.Routes.DefaultRouteRegistrar.DEFAULT_ROUTE, new { controller = "AccountOptions", action = "Overview" })' }
                                    }, {
                                        xtype: 'label',
                                        text: 'Log Out',
                                        margin: '0, 20, 0, 0',
                                        cls: 'x-userMenu-label',
                                        style: 'color: white;',
                                        autoEl: { tag: 'a', href: '@Url.RouteUrl(Web.Bootstrap.Routes.DefaultRouteRegistrar.DEFAULT_ROUTE, new { controller = "Account", action = "LogOff" })' }
                                    }, { xtype: 'image',
                                        src: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/Logout.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                                        margin: '-4 10 0 -15',
                                        style: { float: 'right' }

                                    }]
                                }]
                            }, {
                                xtype: 'container',
                                width: 10,
                                height: 62
                            }]
                        }]

                    }]
                },{
                    xtype: 'container',
                    id: res.header.subnavigation.id,
                    flex: 1,
                    layout: {
                        align: 'stretch',
                        type: 'hbox'
                    }
                }]
            },{
                xtype: 'container',
                id: res.content.id,
                layout: {
                    type: 'fit'
                },
                flex: 1
            }]
        });

    });

    </script>

    @RenderBody()
</body>
</html>
