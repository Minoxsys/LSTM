
<script type="text/javascript">
    Ext.onReady(function(){
        
        window.feature.ContactModel = Ext.define('ContactModel', {
            extend: 'Ext.data.Model',
            fields: [
                {
                    name: 'id', type: 'string',
                    convert: function (value, record) {
                        return record.get('Id');
                    }
                },
    
                { name: 'ContactType', type: 'string' },
                { name: 'ContactDetail', type: 'string' },
                { name: 'IsMainContact', type: 'boolean' },
                { name: 'Id', type: 'string' }
            ]
        });
    
        window.feature.contactsStore = Ext.define('snapshot-contactsStore', {
            extend: 'Ext.data.Store',
            model: window.feature.ContactModel,
            autoSync: false
            
        });
        window.feature.detailTypeStore = Ext.create('Ext.data.Store',{
            fields: ['name'],
            data: [
                { name: "@Domain.Contact.MOBILE_NUMBER_CONTACT_TYPE" },
                { name: "@Domain.Contact.EMAIL_CONTACT_TYPE" }
            ]
        });
    
        window.feature.editorRowCombo = {
            xtype: 'combobox',
            itemId: 'editor-row-combo',
            store: window.feature.detailTypeStore,
            displayField: 'name',
            valueField: 'name',
            emptyText: 'Select Name',
            typeAhead: false,
            editable: false
        };

       
        window.feature.rowEditor = Ext.create('Ext.grid.plugin.RowEditing',{ 
            clicksToEdit:2,
            errorSummary: false
        });

        window.feature.contactsGrid = Ext.define( 'snapshot-contactsGrid',{
            extend:  'Ext.grid.Panel', 
            selType: 'rowmodel',
            flex:1,
            cls: 'white-border',
            plugins:[
                window.feature.rowEditor
            ],
            listeners: {
                afterrender: function(grid){
                    grid.ownerCt.doLayout(); 
                },
                'edit': function(editor, e) {
                    
                    // set IsMainContact to false on all other records
                    if (e.record.get('IsMainContact')){
                        e.store.each(function(record){
                            if (e.record.id !== record.id){
                                record.set('IsMainContact', false);
                            }  
                        });
                    }

                    // set this as the MainContact if there are no others
                    if (e.store.getCount() == 1){
                        e.record.set('IsMainContact', true);
                    }
                },
                'canceledit': function(editor,e){
                    if(e.record.data.ContactDetail === ""){
                        e.grid.store.remove(e.record);           
                    }         
                }

            },
            columns: [
                {
                    header: _t('Contact Method'), dataIndex: 'ContactType',
                    flex:1,
                    menuDisabled: true,
                    editor: window.feature.editorRowCombo   
                },{
                    header: _t('Mobile Number/Email'), dataIndex: 'ContactDetail',
                    flex:2,
                    menuDisabled: true,
                    editor: {
                        xtype:'textfield',
                        allowBlank: false
                    }
                },{
                    xtype: 'booleancolumn', 
                    trueText: 'Yes',
                    falseText: 'No', 
                    header: _t('Default'), dataIndex: 'IsMainContact',
                    menuDisabled:true,
                    editor: {
                        xtype:'checkbox'
                    }
    
                }, {
                    xtype: 'actioncolumn',
                    menuDisabled: true,
                    flex: 1,
                    text: _t('Actions'),
                    items: [{
                        icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/edit.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',

                            handler: function (grid, rowIndex, colIndex) {
                                var rec = grid.getStore().getAt(rowIndex);
                                window.feature.rowEditor.startEdit(rec, 0);
                            }
                    },{
                            icon: '@(Url.RouteUrl<Web.Controllers.AssetsController>(it => it.Shared("/img/delete.png"), Web.Bootstrap.Routes.AssetRoutesRegistrar.SHARED))',
                            action: 'Delete',
                            handler: function (grid, rowIndex, colIndex) {
                                var rec = grid.getStore().getAt(rowIndex);
                                var msgConfirm = Ext.Msg;
                                msgConfirm.ui = 'snapshot-popup-window';
                                msgConfirm.msgButtons['no'].ui = 'snapshot-cancel-btn';
                                msgConfirm.msgButtons['no'].margin = '10 10 20 0';
                                msgConfirm.msgButtons['yes'].ui = 'snapshot-add-btn';
                                msgConfirm.msgButtons['ok'].ui = 'snapshot-add-btn';
                                msgConfirm.msgButtons['ok'].margin = '10 10 20 0';
                                 msgConfirm.confirm('Confirm', Ext.String.format(_t('Are you sure you want to delete contact `{0}`'), rec.get('ContactDetail')), function (button) {
                                
                                        if (button === 'yes') {

                                            grid.getStore().remove(rec);
    
                                        }
                                    });
                                }
    
                            }
                        
                    ]
                }
            ]
        });
    });
 </script>